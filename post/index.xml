<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proyectos on Daniel Rodriguez</title>
    <link>https://el-nasa.github.io/blog/post/</link>
    <description>Recent content in Proyectos on Daniel Rodriguez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://el-nasa.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contador de rayos en imágenes</title>
      <link>https://el-nasa.github.io/blog/post/contador-rayos/</link>
      <pubDate>Wed, 20 Oct 2021 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/contador-rayos/</guid>
      <description>Contador de rayos Cuenta cuántos rayos hay en imágenes de tormentas eléctricas usando dos tipos de algoritmos, redes neuronales convolucionales y un algoritmo de lógica difusa optimizado con una técnica de algoritmos genéticos.
Haz clic aquí para ir al repositorio
Haz clic aquí para ver el articulo cientifico
Haz clic aquí para ver el poster
¿Para qué sirve? Las tormentas eléctricas son uno de los fenómenos naturales más devastadores que existen, cada año se pierden millones de dólares en reparar los daños que causan los rayos en las zonas donde caen, ya sea por pérdida de equipos, infraestructura o mismos daños a la naturaleza que se requieren mitigar, como es el caso de los incendios forestales.</description>
    </item>
    
    <item>
      <title>Robot de monitoreo de la calidad del gua</title>
      <link>https://el-nasa.github.io/blog/post/claraboya-calidad-agua/</link>
      <pubDate>Fri, 16 Jul 2021 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/claraboya-calidad-agua/</guid>
      <description>Este robot es una propuesta que hicimos para la hackathon de IBM en el año 2021, su propósito es medir la calidad del agua en zonas rurales.
Diseño electrónico   Diseño mecánico  </description>
    </item>
    
    <item>
      <title>Traductor de idiomas con IA</title>
      <link>https://el-nasa.github.io/blog/post/app-hackathon-taxis-libres/</link>
      <pubDate>Wed, 16 Jun 2021 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/app-hackathon-taxis-libres/</guid>
      <description>Haz clic aquí para ver la demostración
Este proyecto surge como propuesta para la hackathon de la empresa Taxis Libres en el año 2021 en el que se buscaba mejorar la aplicación utilizada por los usuarios para que fuera más atractiva.
La solución que propuso mi equipo fue la integración de la inteligencia artificial de IBM para hacer traducción de las conversaciones que tienen los pasajeros y conductores en el caso de que hablen distintos idiomas.</description>
    </item>
    
    <item>
      <title>Cohete modelo POA</title>
      <link>https://el-nasa.github.io/blog/post/cohete-poa/</link>
      <pubDate>Thu, 20 May 2021 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/cohete-poa/</guid>
      <description>El cohete modelo Pillar of Autumn (POA) es el primer proyecto desarrollado por el semillero de investigación, y aún sigue en desarrollo.
¿De qué va el proyecto? Realizar un cohete modelo que vuele 100 metros el cual nos permita probar
 Electrónica: Probar sistema electrónico para la transmisión de información en tiempo real Software: Software de visualización de datos recibidos Paracaídas: Probar sistema de detección de caída libre y accionar paracaídas Motor: Probar funcionamiento de motor y validarlo respecto a pruebas estáticas  Vista general del cohete  Computadora de vuelo Aquí podrá encontrar más información sobre el código de la computadora de vuelo  Simulaciones   Pruebas con motores Vídeo de pruebas estaticas  Software Este software fue hecho para la toma y análisis de datos de serie de tiempo para determinar la curva de empuje del cohete.</description>
    </item>
    
    <item>
      <title>Sistema de cultivo compacto de hongos con riego incorporado a pequeña escala</title>
      <link>https://el-nasa.github.io/blog/post/hongo-machine/</link>
      <pubDate>Wed, 23 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/hongo-machine/</guid>
      <description>Vídeo
El &amp;ldquo;Sistema de cultivo compacto de hongos con riego incorporado a pequeña escala&amp;rdquo; (A.K.A: hongo-machine) es una propuesta con la que ganamos el reto de innovación del UN Robot 2020. Consiste en una máquina semiautomática para el cultivo de hongos pensada para personas que viven en zonas de guerra.
Planteamiento del problema Los problemas de desnutrición a nivel mundial son una de las mayores problemáticas de la humanidad, muchas veces causada por limitaciones que tienen los individuos para obtener alimentos que les sean nutritivos y de bajo costo en condiciones adversas como conflicto armado, clima, pobreza, entre otras cosas.</description>
    </item>
    
    <item>
      <title>CanSat UNAM</title>
      <link>https://el-nasa.github.io/blog/post/cansat-unam/</link>
      <pubDate>Mon, 20 Apr 2020 11:00:59 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/cansat-unam/</guid>
      <description>Este es el picosatélite &amp;ldquo;CanSat&amp;rdquo; que presentó mi equipo del semillero ATL, con el cual obtuvimos el puesto #14 de la competencia (cerca de 200 equipos iniciales).
¿De que trata? El objetivo es el diseño de un picosatélite que cumpla con los requerimientos planteados en la competencia iberoamericana de satélites enlatados de la UNAM. La idea es que este satélite se eleve en un dron a 400 metros sobre el nivel del suelo para luego ser liberado.</description>
    </item>
    
    <item>
      <title>GUI visualización de datos en tiempo real para cohetes y picosatelites</title>
      <link>https://el-nasa.github.io/blog/post/gui-cansat-rockets/</link>
      <pubDate>Sun, 08 Mar 2020 10:58:08 -0400</pubDate>
      
      <guid>https://el-nasa.github.io/blog/post/gui-cansat-rockets/</guid>
      <description>Haz clic aquí para ver el repositorio
GUI Estación terrestre para CanSat u OBC&amp;rsquo;s Código de una GUI para una estación terrestre para CanSats y/o OBCs donde se muestran los datos de diferentes sensores en tiempo real. No se necesitan sensores para probarlo.
Tabla de contenidos  Apoyo Información general Liberias Configuración Linux Configuración Windows ¿Cómo funciona? Fuentes Licencia   Apoyo Si usaste este proyecto o aprendiste algo, por favor compartelo o dale una estrella en github para seguir haciendo proyectos de código abierto.</description>
    </item>
    
  </channel>
</rss>
